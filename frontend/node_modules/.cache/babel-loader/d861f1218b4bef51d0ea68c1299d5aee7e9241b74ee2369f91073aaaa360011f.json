{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas.tristoni\\\\Downloads\\\\AEO-FrontEnd\\\\frontend\\\\src\\\\pages\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api/api'; // Importa nossa instância do Axios configurada!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [name, setName] = useState('');\n  const [editingCategory, setEditingCategory] = useState(null); // Guarda a categoria que está sendo editada\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // Efeito para buscar as categorias do backend quando o componente carregar\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        // A requisição agora usa nossa instância 'api' e já envia o token\n        const response = await api.get('/categories');\n        setCategories(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Erro ao carregar as categorias. Faça o login novamente.');\n        console.error(err);\n        setLoading(false);\n      }\n    };\n    fetchCategories();\n  }, []); // O array vazio [] faz com que o useEffect rode apenas uma vez\n\n  // Limpa o formulário e o estado de edição\n  const resetForm = () => {\n    setName('');\n    setEditingCategory(null);\n    setError('');\n  };\n\n  // Prepara o formulário para editar uma categoria existente\n  const handleEdit = category => {\n    setEditingCategory(category);\n    setName(category.name);\n  };\n\n  // Deleta uma categoria\n  const handleDelete = async id => {\n    if (window.confirm('Tem certeza que deseja deletar esta categoria?')) {\n      try {\n        await api.delete(`/categories/${id}`);\n        setCategories(categories.filter(cat => cat.id !== id)); // Remove da lista local\n      } catch (err) {\n        setError('Erro ao deletar a categoria.');\n        console.error(err);\n      }\n    }\n  };\n\n  // Lida com o envio do formulário (criação ou atualização)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!name.trim()) {\n      setError(\"O nome da categoria é obrigatório.\");\n      return;\n    }\n    const categoryData = {\n      name\n    };\n    try {\n      if (editingCategory) {\n        // Se estiver editando, faz uma requisição PUT\n        const response = await api.put(`/categories/${editingCategory.id}`, categoryData);\n        setCategories(categories.map(cat => cat.id === editingCategory.id ? response.data : cat));\n      } else {\n        // Se não, cria uma nova com uma requisição POST\n        const response = await api.post('/categories', categoryData);\n        setCategories([...categories, response.data]);\n      }\n      resetForm(); // Limpa o formulário após o sucesso\n    } catch (err) {\n      setError(\"Ocorreu um erro ao salvar a categoria. Verifique se o nome já existe.\");\n      console.error(err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando categorias...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gerenciar Categorias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"category-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingCategory ? 'Editar Categoria' : 'Adicionar Nova Categoria'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Nome da categoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingCategory ? 'Atualizar' : 'Adicionar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), editingCategory && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetForm,\n        className: \"cancel-btn\",\n        children: \"Cancelar Edi\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Categorias Existentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categories-list\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(category),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(category.id),\n            className: \"delete-btn\",\n            children: \"Deletar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Categories, \"MYKH2cOUibGYGc10DlPkonwv/lg=\");\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Categories","_s","categories","setCategories","name","setName","editingCategory","setEditingCategory","error","setError","loading","setLoading","fetchCategories","response","get","data","err","console","resetForm","handleEdit","category","handleDelete","id","window","confirm","delete","filter","cat","handleSubmit","e","preventDefault","trim","categoryData","put","map","post","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/silas.tristoni/Downloads/AEO-FrontEnd/frontend/src/pages/Categories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api/api'; // Importa nossa instância do Axios configurada!\r\n\r\nconst Categories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [editingCategory, setEditingCategory] = useState(null); // Guarda a categoria que está sendo editada\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Efeito para buscar as categorias do backend quando o componente carregar\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                // A requisição agora usa nossa instância 'api' e já envia o token\r\n                const response = await api.get('/categories');\r\n                setCategories(response.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Erro ao carregar as categorias. Faça o login novamente.');\r\n                console.error(err);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []); // O array vazio [] faz com que o useEffect rode apenas uma vez\r\n\r\n    // Limpa o formulário e o estado de edição\r\n    const resetForm = () => {\r\n        setName('');\r\n        setEditingCategory(null);\r\n        setError('');\r\n    };\r\n\r\n    // Prepara o formulário para editar uma categoria existente\r\n    const handleEdit = (category) => {\r\n        setEditingCategory(category);\r\n        setName(category.name);\r\n    };\r\n\r\n    // Deleta uma categoria\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Tem certeza que deseja deletar esta categoria?')) {\r\n            try {\r\n                await api.delete(`/categories/${id}`);\r\n                setCategories(categories.filter(cat => cat.id !== id)); // Remove da lista local\r\n            } catch (err) {\r\n                setError('Erro ao deletar a categoria.');\r\n                console.error(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Lida com o envio do formulário (criação ou atualização)\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!name.trim()) {\r\n            setError(\"O nome da categoria é obrigatório.\");\r\n            return;\r\n        }\r\n\r\n        const categoryData = { name };\r\n\r\n        try {\r\n            if (editingCategory) {\r\n                // Se estiver editando, faz uma requisição PUT\r\n                const response = await api.put(`/categories/${editingCategory.id}`, categoryData);\r\n                setCategories(categories.map(cat => (cat.id === editingCategory.id ? response.data : cat)));\r\n            } else {\r\n                // Se não, cria uma nova com uma requisição POST\r\n                const response = await api.post('/categories', categoryData);\r\n                setCategories([...categories, response.data]);\r\n            }\r\n            resetForm(); // Limpa o formulário após o sucesso\r\n        } catch (err) {\r\n            setError(\"Ocorreu um erro ao salvar a categoria. Verifique se o nome já existe.\");\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Carregando categorias...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"categories-container\">\r\n            <h2>Gerenciar Categorias</h2>\r\n\r\n            <form onSubmit={handleSubmit} className=\"category-form\">\r\n                <h3>{editingCategory ? 'Editar Categoria' : 'Adicionar Nova Categoria'}</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Nome da categoria\"\r\n                />\r\n                <button type=\"submit\">{editingCategory ? 'Atualizar' : 'Adicionar'}</button>\r\n                {editingCategory && (\r\n                    <button type=\"button\" onClick={resetForm} className=\"cancel-btn\">\r\n                        Cancelar Edição\r\n                    </button>\r\n                )}\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n            </form>\r\n\r\n            <h3>Categorias Existentes</h3>\r\n            <ul className=\"categories-list\">\r\n                {categories.map((category) => (\r\n                    <li key={category.id}>\r\n                        <span>{category.name}</span>\r\n                        <div className=\"btn-group\">\r\n                            <button onClick={() => handleEdit(category)}>Editar</button>\r\n                            <button onClick={() => handleDelete(category.id)} className=\"delete-btn\">Deletar</button>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Categories;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}