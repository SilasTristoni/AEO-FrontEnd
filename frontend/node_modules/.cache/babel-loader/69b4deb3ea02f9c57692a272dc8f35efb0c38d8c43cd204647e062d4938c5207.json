{"ast":null,"code":"// Dentro do seu componente Orders.js\n\nconst fetchData = async () => {\n  var _auth$user;\n  if (!((_auth$user = auth.user) !== null && _auth$user !== void 0 && _auth$user.id)) {\n    setPageLoading(false);\n    return;\n  }\n  setPageLoading(true);\n  try {\n    // CORREÇÃO: A chamada de API agora usa a rota correta do seu backend\n    const [ordersResponse, productsResponse] = await Promise.all([api.get('/orders/myorders').catch(err => {\n      // <-- ROTA CORRIGIDA AQUI\n      if (err.response && err.response.status === 404) return {\n        data: []\n      };\n      throw err;\n    }), api.get('/products')]);\n\n    // O backend retorna os pedidos completos, então vamos usá-los diretamente\n    // Note que o backend retorna 'products' com 'p' minúsculo no alias\n    // e a tabela de junção é 'OrderProduct'\n    setPastOrders(ordersResponse.data.map(order => ({\n      id: order.id,\n      products: order.products.map(p => ({\n        id: p.id,\n        name: p.name,\n        OrderProduct: {\n          quantity: p.OrderProduct.quantity\n        }\n      }))\n    })));\n    setAllProducts(productsResponse.data);\n  } catch (err) {\n    console.error(\"Falha ao carregar os dados da página:\", err);\n    setError(\"Falha ao carregar os dados da página.\");\n  } finally {\n    setPageLoading(false);\n  }\n};\n\n// O resto do seu componente pode continuar igual...","map":{"version":3,"names":["fetchData","_auth$user","auth","user","id","setPageLoading","ordersResponse","productsResponse","Promise","all","api","get","catch","err","response","status","data","setPastOrders","map","order","products","p","name","OrderProduct","quantity","setAllProducts","console","error","setError"],"sources":["C:/Users/joao.garcia2/Documents/testeFront/AEO-FrontEnd/frontend/src/pages/Orders.js"],"sourcesContent":["// Dentro do seu componente Orders.js\r\n\r\nconst fetchData = async () => {\r\n    if (!auth.user?.id) {\r\n        setPageLoading(false);\r\n        return;\r\n    }\r\n    \r\n    setPageLoading(true);\r\n    try {\r\n        // CORREÇÃO: A chamada de API agora usa a rota correta do seu backend\r\n        const [ordersResponse, productsResponse] = await Promise.all([\r\n            api.get('/orders/myorders').catch(err => { // <-- ROTA CORRIGIDA AQUI\r\n                if (err.response && err.response.status === 404) return { data: [] };\r\n                throw err;\r\n            }),\r\n            api.get('/products')\r\n        ]);\r\n        \r\n        // O backend retorna os pedidos completos, então vamos usá-los diretamente\r\n        // Note que o backend retorna 'products' com 'p' minúsculo no alias\r\n        // e a tabela de junção é 'OrderProduct'\r\n        setPastOrders(ordersResponse.data.map(order => ({\r\n            id: order.id,\r\n            products: order.products.map(p => ({\r\n                id: p.id,\r\n                name: p.name,\r\n                OrderProduct: {\r\n                    quantity: p.OrderProduct.quantity\r\n                }\r\n            }))\r\n        })));\r\n        \r\n        setAllProducts(productsResponse.data);\r\n    } catch (err) {\r\n        console.error(\"Falha ao carregar os dados da página:\", err);\r\n        setError(\"Falha ao carregar os dados da página.\");\r\n    } finally {\r\n        setPageLoading(false);\r\n    }\r\n};\r\n\r\n// O resto do seu componente pode continuar igual..."],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;EAAA,IAAAC,UAAA;EAC1B,IAAI,GAAAA,UAAA,GAACC,IAAI,CAACC,IAAI,cAAAF,UAAA,eAATA,UAAA,CAAWG,EAAE,GAAE;IAChBC,cAAc,CAAC,KAAK,CAAC;IACrB;EACJ;EAEAA,cAAc,CAAC,IAAI,CAAC;EACpB,IAAI;IACA;IACA,MAAM,CAACC,cAAc,EAAEC,gBAAgB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACzDC,GAAG,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MAAE;MACvC,IAAIA,GAAG,CAACC,QAAQ,IAAID,GAAG,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAG,CAAC;MACpE,MAAMH,GAAG;IACb,CAAC,CAAC,EACFH,GAAG,CAACC,GAAG,CAAC,WAAW,CAAC,CACvB,CAAC;;IAEF;IACA;IACA;IACAM,aAAa,CAACX,cAAc,CAACU,IAAI,CAACE,GAAG,CAACC,KAAK,KAAK;MAC5Cf,EAAE,EAAEe,KAAK,CAACf,EAAE;MACZgB,QAAQ,EAAED,KAAK,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,KAAK;QAC/BjB,EAAE,EAAEiB,CAAC,CAACjB,EAAE;QACRkB,IAAI,EAAED,CAAC,CAACC,IAAI;QACZC,YAAY,EAAE;UACVC,QAAQ,EAAEH,CAAC,CAACE,YAAY,CAACC;QAC7B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC;IAEJC,cAAc,CAAClB,gBAAgB,CAACS,IAAI,CAAC;EACzC,CAAC,CAAC,OAAOH,GAAG,EAAE;IACVa,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEd,GAAG,CAAC;IAC3De,QAAQ,CAAC,uCAAuC,CAAC;EACrD,CAAC,SAAS;IACNvB,cAAc,CAAC,KAAK,CAAC;EACzB;AACJ,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}