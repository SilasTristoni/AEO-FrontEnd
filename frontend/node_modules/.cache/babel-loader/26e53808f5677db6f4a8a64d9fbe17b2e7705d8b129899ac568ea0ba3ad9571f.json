{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Silas\\\\Downloads\\\\AEO-FrontEnd\\\\frontend\\\\src\\\\pages\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport EntityForm from '../components/ui/EntityForm'; // <-- 1. Importamos o novo componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Categories() {\n  _s();\n  const [categories, setCategories] = useState([]);\n\n  // 2. O estado agora é um objeto, para ser compatível com o formulário genérico\n  const [currentCategory, setCurrentCategory] = useState({\n    name: ''\n  });\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchCategories = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/categories');\n      setCategories(response.data);\n    } catch (error) {\n      // O interceptor já mostra o toast, mas podemos logar para debug\n      console.error(\"Erro ao buscar categorias:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingCategoryId) {\n      // Se está editando\n      await api.put(`/categories/${editingCategoryId}`, currentCategory);\n      toast.success('Categoria atualizada com sucesso!');\n    } else {\n      // Se está criando\n      await api.post('/categories', currentCategory);\n      toast.success('Categoria criada com sucesso!');\n    }\n    handleCancelEdit(); // Limpa o formulário e reseta o estado\n    fetchCategories(); // Recarrega a lista\n  };\n  const handleEdit = category => {\n    setEditingCategoryId(category.id);\n    setCurrentCategory({\n      name: category.name\n    }); // Preenche o formulário com os dados\n  };\n  const handleCancelEdit = () => {\n    setEditingCategoryId(null);\n    setCurrentCategory({\n      name: ''\n    }); // Limpa o formulário\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Tem certeza que deseja excluir esta categoria? Isso não pode ser desfeito.')) {\n      await api.delete(`/categories/${id}`);\n      toast.success('Categoria excluída com sucesso!');\n      fetchCategories();\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando categorias...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 3. Definimos os campos que o nosso formulário de categoria terá\n  const categoryFields = [{\n    name: 'name',\n    label: 'Categoria',\n    type: 'text'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerenciar Categorias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntityForm, {\n      entity: currentCategory,\n      setEntity: setCurrentCategory,\n      fields: categoryFields,\n      onSubmit: handleSubmit,\n      isEditing: !!editingCategoryId,\n      onCancelEdit: handleCancelEdit,\n      submitButtonText: editingCategoryId ? 'Atualizar Categoria' : 'Criar Categoria'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entity-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Categorias Existentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(category),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(category.id),\n              className: \"delete-button\",\n              children: \"Excluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Categories, \"/hIt+Gm5TH+3pZxS0Pmjz28oKOM=\");\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","toast","EntityForm","jsxDEV","_jsxDEV","Categories","_s","categories","setCategories","currentCategory","setCurrentCategory","name","editingCategoryId","setEditingCategoryId","loading","setLoading","fetchCategories","response","get","data","error","console","handleSubmit","e","preventDefault","put","success","post","handleCancelEdit","handleEdit","category","id","handleDelete","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","categoryFields","label","type","className","entity","setEntity","fields","onSubmit","isEditing","onCancelEdit","submitButtonText","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Silas/Downloads/AEO-FrontEnd/frontend/src/pages/Categories.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../../services/api';\r\nimport { toast } from 'react-toastify';\r\nimport EntityForm from '../components/ui/EntityForm'; // <-- 1. Importamos o novo componente\r\n\r\nfunction Categories() {\r\n  const [categories, setCategories] = useState([]);\r\n  \r\n  // 2. O estado agora é um objeto, para ser compatível com o formulário genérico\r\n  const [currentCategory, setCurrentCategory] = useState({ name: '' });\r\n  \r\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchCategories = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/categories');\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      // O interceptor já mostra o toast, mas podemos logar para debug\r\n      console.error(\"Erro ao buscar categorias:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (editingCategoryId) { // Se está editando\r\n      await api.put(`/categories/${editingCategoryId}`, currentCategory);\r\n      toast.success('Categoria atualizada com sucesso!');\r\n    } else { // Se está criando\r\n      await api.post('/categories', currentCategory);\r\n      toast.success('Categoria criada com sucesso!');\r\n    }\r\n    \r\n    handleCancelEdit(); // Limpa o formulário e reseta o estado\r\n    fetchCategories();   // Recarrega a lista\r\n  };\r\n\r\n  const handleEdit = (category) => {\r\n    setEditingCategoryId(category.id);\r\n    setCurrentCategory({ name: category.name }); // Preenche o formulário com os dados\r\n  };\r\n  \r\n  const handleCancelEdit = () => {\r\n      setEditingCategoryId(null);\r\n      setCurrentCategory({ name: '' }); // Limpa o formulário\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Tem certeza que deseja excluir esta categoria? Isso não pode ser desfeito.')) {\r\n      await api.delete(`/categories/${id}`);\r\n      toast.success('Categoria excluída com sucesso!');\r\n      fetchCategories();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Carregando categorias...</div>;\r\n  }\r\n\r\n  // 3. Definimos os campos que o nosso formulário de categoria terá\r\n  const categoryFields = [\r\n    { name: 'name', label: 'Categoria', type: 'text' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <h1>Gerenciar Categorias</h1>\r\n\r\n      {/* 4. Usamos o EntityForm aqui! */}\r\n      <EntityForm\r\n        entity={currentCategory}\r\n        setEntity={setCurrentCategory}\r\n        fields={categoryFields}\r\n        onSubmit={handleSubmit}\r\n        isEditing={!!editingCategoryId}\r\n        onCancelEdit={handleCancelEdit}\r\n        submitButtonText={editingCategoryId ? 'Atualizar Categoria' : 'Criar Categoria'}\r\n      />\r\n\r\n      <div className=\"entity-list\">\r\n        <h2>Categorias Existentes</h2>\r\n        <ul>\r\n          {categories.map((category) => (\r\n            <li key={category.id}>\r\n              <span>{category.name}</span>\r\n              <div className=\"actions\">\r\n                <button onClick={() => handleEdit(category)}>Editar</button>\r\n                <button onClick={() => handleDelete(category.id)} className=\"delete-button\">Excluir</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categories;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}