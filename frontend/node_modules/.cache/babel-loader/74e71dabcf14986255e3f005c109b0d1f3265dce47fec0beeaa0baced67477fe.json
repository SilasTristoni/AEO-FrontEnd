{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silas.tristoni\\\\Downloads\\\\AEO-FrontEnd\\\\frontend\\\\src\\\\pages\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../api/api';\nimport { toast } from 'react-toastify';\nimport EntityForm from '../components/ui/EntityForm'; // Importando nosso formulário genérico\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]); // Precisamos das categorias para o select\n\n  // O estado agora é um objeto para ser compatível com o formulário\n  const [currentProduct, setCurrentProduct] = useState({\n    name: '',\n    price: '',\n    categoryId: ''\n  });\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Busca tanto os produtos quanto as categorias\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const productsResponse = await api.get('/products');\n      setProducts(productsResponse.data);\n      const categoriesResponse = await api.get('/categories');\n      setCategories(categoriesResponse.data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Converte os valores para os tipos corretos antes de enviar\n    const productData = {\n      ...currentProduct,\n      price: parseFloat(currentProduct.price),\n      categoryId: parseInt(currentProduct.categoryId, 10)\n    };\n    if (editingProductId) {\n      await api.put(`/products/${editingProductId}`, productData);\n      toast.success('Produto atualizado com sucesso!');\n    } else {\n      await api.post('/products', productData);\n      toast.success('Produto criado com sucesso!');\n    }\n    handleCancelEdit();\n    fetchData();\n  };\n  const handleEdit = product => {\n    setEditingProductId(product.id);\n    // Garante que os valores que vão para o formulário são strings\n    setCurrentProduct({\n      name: product.name,\n      price: String(product.price),\n      categoryId: String(product.categoryId)\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditingProductId(null);\n    setCurrentProduct({\n      name: '',\n      price: '',\n      categoryId: ''\n    });\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Tem certeza que deseja excluir este produto?')) {\n      await api.delete(`/products/${id}`);\n      toast.success('Produto excluído com sucesso!');\n      fetchData();\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Definimos os campos para o formulário de Produtos\n  // Incluindo um campo do tipo 'select' para as categorias!\n  const productFields = [{\n    name: 'name',\n    label: 'Produto',\n    type: 'text'\n  }, {\n    name: 'price',\n    label: 'Preço',\n    type: 'number'\n  }, {\n    name: 'categoryId',\n    label: 'Categoria',\n    type: 'select',\n    options: categories.map(cat => ({\n      value: cat.id,\n      label: cat.name\n    }))\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerenciar Produtos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntityForm, {\n      entity: currentProduct,\n      setEntity: setCurrentProduct,\n      fields: productFields,\n      onSubmit: handleSubmit,\n      isEditing: !!editingProductId,\n      onCancelEdit: handleCancelEdit,\n      submitButtonText: editingProductId ? 'Atualizar Produto' : 'Criar Produto'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entity-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Produtos Existentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-list\",\n        children: products.map(product => {\n          var _categories$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Pre\\xE7o: R$ \", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Categoria: \", ((_categories$find = categories.find(c => c.id === product.categoryId)) === null || _categories$find === void 0 ? void 0 : _categories$find.name) || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(product),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product.id),\n                className: \"delete-button\",\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(Products, \"aln8T3WiAY+5PyMNg1XPcmhzMR0=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","toast","EntityForm","jsxDEV","_jsxDEV","Products","_s","products","setProducts","categories","setCategories","currentProduct","setCurrentProduct","name","price","categoryId","editingProductId","setEditingProductId","loading","setLoading","fetchData","productsResponse","get","data","categoriesResponse","error","console","handleSubmit","e","preventDefault","productData","parseFloat","parseInt","put","success","post","handleCancelEdit","handleEdit","product","id","String","handleDelete","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","productFields","label","type","options","map","cat","value","className","entity","setEntity","fields","onSubmit","isEditing","onCancelEdit","submitButtonText","_categories$find","find","c","onClick","_c","$RefreshReg$"],"sources":["C:/Users/silas.tristoni/Downloads/AEO-FrontEnd/frontend/src/pages/Products.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../api/api';\r\nimport { toast } from 'react-toastify';\r\nimport EntityForm from '../components/ui/EntityForm'; // Importando nosso formulário genérico\r\n\r\nfunction Products() {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]); // Precisamos das categorias para o select\r\n\r\n  // O estado agora é um objeto para ser compatível com o formulário\r\n  const [currentProduct, setCurrentProduct] = useState({\r\n    name: '',\r\n    price: '',\r\n    categoryId: '',\r\n  });\r\n\r\n  const [editingProductId, setEditingProductId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Busca tanto os produtos quanto as categorias\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const productsResponse = await api.get('/products');\r\n      setProducts(productsResponse.data);\r\n\r\n      const categoriesResponse = await api.get('/categories');\r\n      setCategories(categoriesResponse.data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar dados:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Converte os valores para os tipos corretos antes de enviar\r\n    const productData = {\r\n      ...currentProduct,\r\n      price: parseFloat(currentProduct.price),\r\n      categoryId: parseInt(currentProduct.categoryId, 10),\r\n    };\r\n\r\n    if (editingProductId) {\r\n      await api.put(`/products/${editingProductId}`, productData);\r\n      toast.success('Produto atualizado com sucesso!');\r\n    } else {\r\n      await api.post('/products', productData);\r\n      toast.success('Produto criado com sucesso!');\r\n    }\r\n    \r\n    handleCancelEdit();\r\n    fetchData();\r\n  };\r\n  \r\n  const handleEdit = (product) => {\r\n    setEditingProductId(product.id);\r\n    // Garante que os valores que vão para o formulário são strings\r\n    setCurrentProduct({\r\n        name: product.name,\r\n        price: String(product.price),\r\n        categoryId: String(product.categoryId),\r\n    });\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingProductId(null);\r\n    setCurrentProduct({ name: '', price: '', categoryId: '' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Tem certeza que deseja excluir este produto?')) {\r\n      await api.delete(`/products/${id}`);\r\n      toast.success('Produto excluído com sucesso!');\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n  \r\n  // Definimos os campos para o formulário de Produtos\r\n  // Incluindo um campo do tipo 'select' para as categorias!\r\n  const productFields = [\r\n    { name: 'name', label: 'Produto', type: 'text' },\r\n    { name: 'price', label: 'Preço', type: 'number' },\r\n    { \r\n      name: 'categoryId', \r\n      label: 'Categoria', \r\n      type: 'select', \r\n      options: categories.map(cat => ({ value: cat.id, label: cat.name }))\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <h1>Gerenciar Produtos</h1>\r\n\r\n      <EntityForm\r\n        entity={currentProduct}\r\n        setEntity={setCurrentProduct}\r\n        fields={productFields}\r\n        onSubmit={handleSubmit}\r\n        isEditing={!!editingProductId}\r\n        onCancelEdit={handleCancelEdit}\r\n        submitButtonText={editingProductId ? 'Atualizar Produto' : 'Criar Produto'}\r\n      />\r\n\r\n      <div className=\"entity-list\">\r\n        <h2>Produtos Existentes</h2>\r\n        <div className=\"item-list\">\r\n            {products.map(product => (\r\n            <div key={product.id} className=\"item-card\">\r\n                <h4>{product.name}</h4>\r\n                <p>Preço: R$ {product.price}</p>\r\n                {/* Mostra o nome da categoria em vez do ID */}\r\n                <p>Categoria: {categories.find(c => c.id === product.categoryId)?.name || 'N/A'}</p>\r\n                <div className=\"actions\">\r\n                <button onClick={() => handleEdit(product)}>Editar</button>\r\n                <button onClick={() => handleDelete(product.id)} className=\"delete-button\">Excluir</button>\r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}